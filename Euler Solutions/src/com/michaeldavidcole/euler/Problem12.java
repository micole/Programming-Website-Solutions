package com.michaeldavidcole.euler;
/**
 * 
 * @author micole
 *
 * The sequence of triangle numbers is generated by adding the natural numbers. So the 7th triangle number would be 1 + 2 + 3 + 4 + 5 + 6 + 7 = 28. The first ten terms would be:
 * 1, 3, 6, 10, 15, 21, 28, 36, 45, 55, ...
 * Let us list the factors of the first seven triangle numbers:
 1: 1
 3: 1,3
 6: 1,2,3,6
10: 1,2,5,10
15: 1,3,5,15
21: 1,3,7,21
28: 1,2,4,7,14,28
 * We can see that 28 is the first triangle number to have over five divisors.
 * What is the value of the first triangle number to have over five hundred divisors?
 * 
 */
public class Problem12 {

	public static void main(String[] args) {
		PrimeAndFactor prime = new PrimeAndFactor();
		prime.FindNPrimes(501);
		int triangle = 0;
		int current = 500;
		while(triangle ==0){
			if(prime.FindDivisorsForN(sumRange(1,current)).size() >500){
				triangle = current;
			}
			System.out.println(prime.factors);
			current++;
		}
		System.out.println(triangle);
	}
	
	/**
	 * Sum all the numbers from F to L (first to last)
	 * 
	 * @param f
	 * First number in the range
	 * @param l
	 * Last number in the range
	 * @return sum
	 */
	public static int sumRange(int f, int l){
		return((l*l - f*f + f+l)/2);
	}

}
